// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render home page correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(InputLabel)
          htmlFor="search"
        >
          Provide Book Title and Press Enter (ex. react)
        </WithStyles(InputLabel)>,
        "    ",
        <WithStyles(Input)
          autoFocus={true}
          id="search"
          name="search"
          onKeyPress={[Function]}
          type="text"
        />,
        undefined,
        "",
        undefined,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Provide Book Title and Press Enter (ex. react)",
          "htmlFor": "search",
        },
        "ref": null,
        "rendered": "Provide Book Title and Press Enter (ex. react)",
        "type": [Function],
      },
      "    ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoFocus": true,
          "id": "search",
          "name": "search",
          "onKeyPress": [Function],
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      undefined,
      "",
      undefined,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(InputLabel)
            htmlFor="search"
          >
            Provide Book Title and Press Enter (ex. react)
          </WithStyles(InputLabel)>,
          "    ",
          <WithStyles(Input)
            autoFocus={true}
            id="search"
            name="search"
            onKeyPress={[Function]}
            type="text"
          />,
          undefined,
          "",
          undefined,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Provide Book Title and Press Enter (ex. react)",
            "htmlFor": "search",
          },
          "ref": null,
          "rendered": "Provide Book Title and Press Enter (ex. react)",
          "type": [Function],
        },
        "    ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoFocus": true,
            "id": "search",
            "name": "search",
            "onKeyPress": [Function],
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        undefined,
        "",
        undefined,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`should be possible to activate button with Spacebar 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(InputLabel)
          htmlFor="search"
        >
          Provide Book Title and Press Enter (ex. react)
        </WithStyles(InputLabel)>,
        "    ",
        <WithStyles(Input)
          autoFocus={true}
          id="search"
          name="search"
          onKeyPress={[Function]}
          type="text"
        />,
        undefined,
        "",
        undefined,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Provide Book Title and Press Enter (ex. react)",
          "htmlFor": "search",
        },
        "ref": null,
        "rendered": "Provide Book Title and Press Enter (ex. react)",
        "type": [Function],
      },
      "    ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoFocus": true,
          "id": "search",
          "name": "search",
          "onKeyPress": [Function],
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      undefined,
      "",
      undefined,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(InputLabel)
            htmlFor="search"
          >
            Provide Book Title and Press Enter (ex. react)
          </WithStyles(InputLabel)>,
          "    ",
          <WithStyles(Input)
            autoFocus={true}
            id="search"
            name="search"
            onKeyPress={[Function]}
            type="text"
          />,
          undefined,
          "",
          undefined,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Provide Book Title and Press Enter (ex. react)",
            "htmlFor": "search",
          },
          "ref": null,
          "rendered": "Provide Book Title and Press Enter (ex. react)",
          "type": [Function],
        },
        "    ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoFocus": true,
            "id": "search",
            "name": "search",
            "onKeyPress": [Function],
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        undefined,
        "",
        undefined,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
